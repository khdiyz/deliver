basePath: /
definitions:
  models.BaseResponse:
    properties:
      data: {}
      description:
        type: string
      message:
        type: string
      pagination:
        $ref: '#/definitions/models.Pagination'
      status:
        type: string
      success:
        type: boolean
    type: object
  models.CategoryCreateRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.CategoryUpdateRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.LoginRequest:
    properties:
      email:
        default: khdiyz.12@gmail.com
        type: string
      password:
        default: Secret@12
        type: string
    required:
    - password
    type: object
  models.Pagination:
    properties:
      item_total:
        type: integer
      page:
        default: 1
        type: integer
      page_size:
        default: 10
        type: integer
      page_total:
        type: integer
    type: object
  models.ProductCreateRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      name:
        type: string
      photo:
        type: string
      price:
        type: integer
    required:
    - name
    - photo
    type: object
  models.ProductUpdateRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      name:
        type: string
      photo:
        type: string
      price:
        type: integer
    required:
    - name
    - photo
    type: object
  models.RefreshRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  models.UserCreateRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      role_id:
        type: integer
    required:
    - full_name
    - password
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for Application
  title: EduSync API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login User
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      summary: Login User
      tags:
      - Auth
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh Token
      parameters:
      - description: Refresh Token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/models.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      summary: Refresh Token
      tags:
      - Auth
  /api/v1/categories:
    get:
      consumes:
      - application/json
      description: Get List Category
      parameters:
      - default: 10
        description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - default: 1
        description: page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Get List Category
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Create Category
      parameters:
      - description: Create Category
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/models.CategoryCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Category
      tags:
      - Category
  /api/v1/categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Category
      parameters:
      - description: Category Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Category
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: Get Category By Id
      parameters:
      - description: Category Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Category By Id
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Update Category
      parameters:
      - description: Category Id
        in: path
        name: id
        required: true
        type: integer
      - description: Update Category
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/models.CategoryUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Category
      tags:
      - Category
  /api/v1/minio/upload-image:
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: Upload Image
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/octet-stream
      - image/png
      - image/jpeg
      - image/jpg
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Minio
  /api/v1/products:
    get:
      consumes:
      - application/json
      description: Get List Product
      parameters:
      - default: 10
        description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - default: 1
        description: page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Get List Product
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: Create Product
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/models.ProductCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Product
      tags:
      - Product
  /api/v1/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product
      parameters:
      - description: Product Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: Get Product By Id
      parameters:
      - description: Product Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Product By Id
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update Product
      parameters:
      - description: Product Id
        in: path
        name: id
        required: true
        type: integer
      - description: Update Product
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/models.ProductUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Product
      tags:
      - Product
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: Get List Role
      parameters:
      - default: 10
        description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - default: 1
        description: page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Get List Role
      tags:
      - Role
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: Create User
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/models.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Create User
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
